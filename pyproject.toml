[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django_consent"
description = ''
readme = "README.rst"
license = "GPL-3.0"
requires-python = ">=3.10"
keywords = ["django", "consent", "gdpr"]
authors = [
    { name = "Benjamin Balder Bach", email = "benjamin@overtag.dk" },
]
dependencies = [
    "Django>=5.0,<5.2",
    "django-ratelimit~=4.1",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dynamic = ["version"]

[project.optional-dependencies]
docs = [
    "sphinx>=6,<8",
    "sphinx_rtd_theme==2.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/django_consent"]

[tool.hatch.version]
path = "src/django_consent/__about__.py"

[tool.hatch.env]
requires = ["hatch-pip-compile"]

[tool.hatch.envs.default]
dependencies = [
    "ruff==0.1.3",
    "ddt==1.6.0",
    "django-functest>=1.2,<1.6",
    "pre-commit==3.5.0",
    "pytest-cov",
    "pytest-django",
    "pytest-pythonpath",
    "pytest>=6.2.5,<7.3",
]

[tool.hatch.envs.default.scripts]
lint = [
    "ruff check src/django_consent tests/ {args}",
    "pre-commit install -f --install-hooks",
    "pre-commit run --all-files --show-diff-on-failure",
]
format = "ruff format src/django_consent tests/ {args}"
clean = [
    "hatch run clean-build",
    "hatch run clean-pyc",
    "rm -fr htmlcov/",
]
clean-build = [
    "rm -fr build",
    "rm -fr dist",
    "rm -fr .eggs",
    "find . -name '*.egg-info' -exec rm -fr {{}} +",
    "find . -name '*.egg' -exec rm -f {{}} +",
]
clean-pyc = [
    "find . -name '*.pyc' -exec rm -f {{}} +",
    "find . -name '*.pyo' -exec rm -f {{}} +",
    "find . -name '*~' -exec rm -f {{}} +",
    "find . -name '__pycache__' -exec rm -fr {{}} +",
]
test = "pytest {args}"
[tool.hatch.envs.test.overrides]
matrix.django.dependencies = [
    { value = "django~={matrix:django}" },
]

[tool.hatch.envs.test]
skip-install = false
matrix-name-format = "dj{value}"

[tool.hatch.envs.test.scripts]
all = [
    "demo/manage.py makemigrations --check",
    "pytest tests/ --cov=django_consent {args}",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.11", "3.12"]
django = ["5.0", "5.1"]

[tool.hatch.envs.docs]
dependencies = [
    "sphinx>=6,<8",
    "sphinx_rtd_theme==2.0.0",
]


[tool.coverage.run]
disable_warnings = ['no-data-collected']
branch = true
parallel = true
source = [
    "src/",
]
omit = [
    ".DS_Store",
    "*/tests/*",
    "src/django_consent/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
exclude = ["env", "_build", "CVS", "__pycache__", ".eggs", "*.egg", "*/*migrations", "demo"]
extend-ignore = ["E203"]
line-length = 79

[tool.ruff.mccabe]
max-complexity = 10

[tool.pytest.ini_options]
django_find_project = false
testpaths = [
    "tests",
]
pythonpath = [
    ".",
    "src",
    "tests",
]
norecursedirs = [
    "demo",
    ".svn",
    "_build",
    "tmp*",
    "dist",
    "*.egg-info",
]
DJANGO_SETTINGS_MODULE = "demo.settings"
